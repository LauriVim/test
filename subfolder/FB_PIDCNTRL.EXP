
(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '\/new FB:s' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
(*
FB to control actuator using analog input as feedback for pid controller. Output is pwm.

PID2:
The manipulated variable Y is already standardised to PWM1000
TUNING:
Select TN according to the time characteristics of the system: fast system = small TN slow system = large TN
. Slowly increment KP gradually, up to a value at which still definitely no fluctuation will occur.
. Readjust TN if necessary.
. Add differential component only if necessary: Select a TV value approx. 2...10 times smaller than TN. Select a KD value more or less similar to KP.
Note that the maximum control deviation is + 127. For good control characteristics this range should not be exceeded, but it should be exploited to the best possible extent
Parameter			 Data type 					Description
X					 WORD					input value
XS					 WORD					preset value
XMAX				 WORD					maximum preset value
KP					 REAL						Proportional component of the output signal (only positive values permissible)
KI					 REAL						Integral component of the output signal (only positive values permissible)
TN					 TIME						integral action time (integral component)
KD					 REAL						Differential component of the output signal (only positive values permissible)
TV					 TIME						derivative action time (differential component)
RESET			 BOOL						TRUE: reset the function element
												FALSE: function element is not executed.
Y					WORD						Manipulated variable(0..1000‰)

INPUT_ANALOGUE:
MODE(DEC)			Input operating mode						Global variable				FB OUT				UNIT
0						deactivated								IN_NOMODE					
1						binary input, minus switching (BH)		IN_DIGITAL_H					0 / 1
2						binary input, plus switching (BL)			IN_DIGITAL_L					0 / 1
4						current input								IN_CURRENT					0…20 000				µA				
8						voltage input								IN_VOLTAGE10				0…10 000				mV		
16						voltage input								IN_VOLTAGE30				0…32 000				mV		
32						voltage input, ratiometric					IN_RATIO						0…1 000				‰								
64
128
256
512					resistance input							IN_RESISTANCE				3...680					Ohm
																									16...30 000
PWM1000:
INIT : BOOL;						(* To initialize it *)
FREQUENCY : WORD;			(* PWM frequency in Hz *)
CHANNEL : BYTE;				(* 0 .. 15 *)
VALUE : WORD;					(* Duty cycle in permille *)
CHANGE : BOOL;					(* To change the frequency, duty cycle or dither value *)
DITHER_VALUE : WORD;			(* Dither value in permille *)
DITHER_FREQUENCY : WORD;	(* Dither frequency in Hz *)
	
*)					

FUNCTION_BLOCK FB_PIDcntrl
VAR_INPUT
	_uitemperatureSensorValue					:UINT;
	_itemperatureSP								:INT;
	_xenableChannel								:BOOL;
	_imode										:INT;
	_byInChannel									:BYTE;
	_rlinearInMin									:REAL;
	_rlinearInMax									:REAL;
	_rlinearOutMin								:REAL;
	_rlinearOutMax								:REAL;
	_byOutPwnChannel							:BYTE;
	_xinitPwm										:BOOL;
	_ipwmFreq									:INT;
	_pwmChange									:BOOL;
	_uipwmdither									:UINT;
	_uipwmdithefreq								:UINT;
	_rKP											:REAL;
	_rKI											:REAL;
	_tTN											:TIME;
	_rKD											:REAL;
	_tTV											:TIME;


END_VAR
VAR_OUTPUT
END_VAR
VAR
	_fbpid											:PID2;
	_fbpwm										:PWM1000;
	_fblinearscale									:LIN_TRAFO;
	_fbinanalog									:INPUT_ANALOG;
	_ixmaxpid										:INT;
	_xpidreset										:BOOL;

END_VAR
(* @END_DECLARATION := '0' *)
_FBD_BODY
_NETWORKS : 2
_NETWORK

_COMMENT
''
_END_COMMENT
_FUNCTIONBLOCK
_fbpwm	
_BOX_EXPR : 7
_OPERAND
_EXPRESSION
_POSITIV
_xinitPwm
_OPERATOR
_BOX_EXPR : 1
_OPERAND
_EXPRESSION
_POSITIV
_ipwmFreq
_EXPRESSION
_POSITIV
INT_TO_WORD
_OPERAND
_EXPRESSION
_POSITIV
_byOutPwnChannel
_FUNCTIONBLOCK
_fbpid	
_BOX_EXPR : 9
_OPERATOR
_BOX_EXPR : 1
_FUNCTIONBLOCK
_fblinearscale	
_BOX_EXPR : 5
_FUNCTIONBLOCK
_fbinanalog
_BOX_EXPR : 3
_OPERAND
_EXPRESSION
_POSITIV
_xenableChannel
_OPERAND
_EXPRESSION
_POSITIV
_imode
_OPERAND
_EXPRESSION
_POSITIV
_byInChannel
_EXPRESSION
_POSITIV
INPUT_ANALOG
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_EMPTY
_OPERAND
_EXPRESSION
_POSITIV
_rlinearInMin
_OPERAND
_EXPRESSION
_POSITIV
_rlinearInMax
_OPERAND
_EXPRESSION
_POSITIV
_rlinearOutMin
_OPERAND
_EXPRESSION
_POSITIV
_rlinearOutMax
_EXPRESSION
_POSITIV
LIN_TRAFO
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_EMPTY
_EXPRESSION
_POSITIV
REAL_TO_WORD
_OPERATOR
_BOX_EXPR : 1
_OPERAND
_EXPRESSION
_POSITIV
_itemperatureSP
_EXPRESSION
_POSITIV
INT_TO_WORD
_OPERATOR
_BOX_EXPR : 1
_OPERAND
_EXPRESSION
_POSITIV
_ixmaxpid
_EXPRESSION
_POSITIV
INT_TO_WORD
_OPERAND
_EXPRESSION
_POSITIV
_rKP
_OPERAND
_EXPRESSION
_POSITIV
_rKI
_OPERAND
_EXPRESSION
_POSITIV
_tTN
_OPERAND
_EXPRESSION
_POSITIV
_rKD
_OPERAND
_EXPRESSION
_POSITIV
_tTV
_OPERAND
_EXPRESSION
_POSITIV
_xpidreset
_EXPRESSION
_POSITIV
PID2
_OUTPUTS : 0
_OPERAND
_EXPRESSION
_POSITIV
_pwmChange
_OPERATOR
_BOX_EXPR : 1
_OPERAND
_EXPRESSION
_POSITIV
_uipwmdither
_EXPRESSION
_POSITIV
UINT_TO_WORD
_OPERATOR
_BOX_EXPR : 1
_OPERAND
_EXPRESSION
_POSITIV
_uipwmdithefreq
_EXPRESSION
_POSITIV
UINT_TO_WORD
_EXPRESSION
_POSITIV
PWM1000
_OUTPUTS : 0
_NETWORK

_COMMENT
''
_END_COMMENT
_OPERAND
_EXPRESSION
_POSITIV
???

END_FUNCTION_BLOCK
